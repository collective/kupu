/*****************************************************************************
 *
 * Kupu plone styles
 *
 * Copyright (c) 2003 Kupu Contributors. See CREDITS.txt
 *
 * Feel free to use whole or parts of this for your own designs, but
 * give credit where credit is due.
 *
 *****************************************************************************/

/* $Id: kupuplone.css 7217 2004-11-11 13:20:56Z duncan $ */


/* <dtml-with base_properties><dtml-let buttonhighlight="'#fff'" buttonshadow="contentViewBorderColor"> */

div.kupu-toolboxes {display: none}

/*select#kupu-tb-styles {display: block}*/

div.kupu-tb { margin: 0; }
div.kupu-fulleditor { margin-right: 0; }
div.kupu-fulleditor .kupu-editorframe {
  margin-right: 0;
}

.drawer {
    left: 25%;
}

/* Kupu pulls in Plone stylesheets. If you want a paragraph to look
different in Kupu from Plone, then don't add rules here, add them in
ploneCustom.css and use the kupu class to distinguish them. e.g.

.pullQuote { float: right; width: 30%; }
.kupu .pullQuote { float:none; width: auto; }
*/


/* Hide the 'target' field in the LinkLibraryDrawer 

   I've used a class as an identifier here because somehow using id
   doesn't seem to work (Mozilla doesn't seem to apply CSS defined for
   an id when generating HTML using XSLT).
*/
.kupu-linkdrawer-target-row, .kupu-linkdrawer-name-row {
  display: none
}

textarea { width: 90%; } /* Override buggy Plone setting */

/* plone customizations regarding color and borders etc */

.kupu-tb {
  background-color:&dtml-contentViewBackgroundColor;;
  padding-bottom:0px;
  width:98%;
  border:1px solid &dtml-contentViewBorderColor;;
}

span#kupu-tb-buttons button {
  width: 24px;
  height: 24px;
  border-color:&dtml-contentViewBackgroundColor;;
  background-color: &dtml-contentViewBackgroundColor;;
  background-position: center center;
  margin-bottom:4px;
  margin-right:-2px;
}

div div.kupu-panels {
  background-color: &dtml-contentViewBackgroundColor;;
}

span#kupu-tb-buttons button:hover {
  border:1px solid;
  border-color:  &dtml-buttonhighlight; &dtml-buttonshadow; &dtml-buttonshadow; &dtml-buttonhighlight;;
}

div.kupu-tb-buttongroup {
  margin-right:1px;
}

#kupu-tb-styles, #kupu-ulstyles, #kupu-olstyles {
  margin-top:3px;
  margin-bottom:4px;
}


.kupu {
  font-size: 70%;
}

iframe.kupu-editor-iframe{
  border:1px solid &dtml-globalBorderColor;;
  width:100%;
  border-top:none;
  margin-right: 0;
}

div.kupu-fulleditor-zoomed .kupu-editor-iframe {
  border: none;
  margin: 0;
}

.kupu-fulleditor-zoomed .kupu-tb {
  width:100%;
}


span#kupu-tb-buttons .kupu-bold-pressed,
span#kupu-tb-buttons .kupu-italic-pressed,
span#kupu-tb-buttons .kupu-subscript-pressed,
span#kupu-tb-buttons .kupu-superscript-pressed,
span#kupu-tb-buttons .kupu-underline-pressed {
  border-color: &dtml-buttonshadow; &dtml-buttonhighlight; &dtml-buttonhighlight; &dtml-buttonshadow;;
}


.kupu-bold,
.kupu-bold-pressed {background-image: url("kupuimages/bold.gif");}

.kupu-forecolor {background-image: url("plonekupuimages/text-color.gif");}
.kupu-inthyperlink {background-image: url("plonekupuimages/anchor.gif");}
.kupu-inthyperlink-pressed {
  border-color: &dtml-buttonshadow; &dtml-buttonhighlight; &dtml-buttonhighlight; &dtml-buttonshadow;;
}
.kupu-exthyperlink {background-image: url("plonekupuimages/hyperlink.gif");}
.kupu-exthyperlink-pressed {
  border-color: &dtml-buttonshadow; &dtml-buttonhighlight; &dtml-buttonhighlight; &dtml-buttonshadow;;
}

.kupu-image {background-image: url("kupuimages/image.png");}

.kupu-indent {background-image: url("kupuimages/indent.gif");}
.kupu-inserthorizontalrule {background-image: url("plonekupuimages/hr.gif");}

.kupu-insertorderedlist,
.kupu-insertorderedlist-pressed {background-image: url("plonekupuimages/numbered_list.gif");}

.kupu-insertunorderedlist,
.kupu-insertunorderedlist-pressed, {background-image: url("plonekupuimages/list.gif");}

.kupu-insertdefinitionlist {background-image: url("plonekupuimages/definitionlist.gif");}

.kupu-italic, 
.kupu-italic-pressed {background-image: url("kupuimages/italic.gif");}

.kupu-justifycenter,
.kupu-justifycenter-pressed {background-image: url("plonekupuimages/center.gif");}

.kupu-justifyleft,
.kupu-justifyleft-pressed {background-image: url("plonekupuimages/left_just.gif");}

.kupu-justifyright,
.kupu-justifyright-pressed {background-image: url("plonekupuimages/right_just.gif");}

.kupu-logo {background-image: url("kupuimages/kupu_icon.gif");}
.kupu-outdent {background-image: url("plonekupuimages/outdent.gif");}
.kupu-redo {background-image: url("plonekupuimages/redo.gif");}
.kupu-save {background-image: url("kupuimages/save.png");}
.kupu-save-and-exit {background-image: url("kupuimages/exit.gif");}
.kupu-space {background-image: url("plonekupuimages/space.gif");}
.kupu-source {background-image: url("plonekupuimages/view-source.gif");}
.kupu-subscript,
.kupu-subscript-pressed  {background-image: url("plonekupuimages/subscript.gif");}
.kupu-superscript,
.kupu-superscript-pressed {background-image: url("plonekupuimages/superscript.gif");}

.kupu-table {background-image: url("plonekupuimages/table.gif");}
.kupu-underline, 
.kupu-underline-pressed {background-image: url("kupuimages/underline.gif");}

.kupu-undo {background-image: url("plonekupuimages/undo.gif");}
.kupu-removelink {background-image: url("plonekupuimages/delete_icon.gif");}
.kupu-removeimage {background-image: url("plonekupuimages/delete_icon.gif");}


div.kupu-drawer {
  position: absolute;
  display: none;
  border: solid 1px &dtml-contentViewBorderColor;;
  border-top: solid &dtml-contentViewBorderColor;;
  background-color: &dtml-contentViewBackgroundColor;;
  padding: 0 8px 8px 8px;
  height: auto;
  width: 520px;
  z-index: 2;
}





/* </dtml-let></dtml-with> */

/* DOCUMENTATION ON PRE-DEFINED PROPERTIES FROM PLONE */

/* You can insert colors and other variables from Plone's
base_properties by doing:

& dtml-variableName ; (without the spaces, excluded here to not make it render)

Example:

myLink {
color: & dtml-fontColor ; (again, without the spaces)
}

This means you can generate your own elements that use Plone's defaults,
and respect any customizations people have done. See base_properties for
the default values.

These are the available properties:

logoName - the file name of the portal logo.

fontFamily - the font family used for all test that is not headers

fontBaseSize - the base font size that everything is calculated from

fontColor - the main font color

backgroundColor - the background color

linkColor - the color used on normal links

linkActiveColor - color used on active links

linkVisitedColor - color used on visited links

borderWidth - the width of most borders in Plone

borderStyle - the style of the border lines, normally solid

borderStyleAnnotations - style of border lines on comments etc

globalBorderColor - the border color used on the main tabs, the portlets etc

globalBackgroundColor - background color for the selected tabs, portlet headings etc

globalFontColor - the color of the font in the tabs and in portlet headings

headingFontFamily - font family for h1/h2/h3/h4/h5/h6 headlines.

headingFontBaseSize - the base size used when calculating the different headline sizes

contentViewBorderColor - the content view tabs border color

contentViewBackgroundColor - the content view tabs background color

contentViewFontColor - the font color used in the content view tabs

textTransform - whether to lowercase text in portlets, tabs etc.

evenRowBackgroundColor - the background color of even rows in listings

oddRowBackgroundColor - the background color of even rows in listings

notifyBorderColor - border color of notification elements like the status message, the calendar focus

notifyBackgroundColor - background color of notification elements like the status message, the calendar focus

discreetColor:string=#999999
helpBackgroundColor:string=#ffffe1

*/